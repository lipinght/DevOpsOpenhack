name: buildPOIapi #name of the workflow 

env:
  AZURE_WEBAPP_NAME: openhackxwt4lo49poi
  API_NAME: api-poi
  WORKFLOW_NAME: dotnet.yml
  APP_NAME: poi

on:
  push: #when we push any changes to the POI code, triggers workflow to run
    branches: [ master ]
    paths: 
      - 'apis/poi/**'
      - '.github/workflows/dotnet.yml'

  pull_request:  #when we pull any changes to the POI code, triggers workflow to run
     branches: [ master ]
     paths: 
      - 'apis/poi/**'
      - '.github/workflows/dotnet.yml'

jobs: #jobs that we need to run to 1: Build & Test the Code   2: create a work item on failure.
  build-and-Test: 

    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: apis/poi 

    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.202
    - name: Restore dependencies
      run: dotnet restore ./web/poi.csproj #added to run the job
    - name: Build
      run: dotnet build --no-restore ./web/poi.csproj
    - name: Build-Test
      run: dotnet build ./tests/UnitTests/UnitTests.csproj
    - name: Test
      run: dotnet test --no-build --verbosity normal ./tests/UnitTests/UnitTests.csproj
   # - name: The Build has failed #start of errorhandling
  #    uses: stefanstranger/azuredevops-bug-action@1.1
   #   if: failure()
   #   with:
    #      OrganizationName: "openhackdevopst2harachum"
    #      PAT: "PAT"
     #     ProjectName: "OpenHackDevOpsT2"
      #    AreaPath: "OpenHackDevOpsT2\\Automation"
       #   IterationPath: "OpenHackDevOpsT2\\Sprint 1"
       #   GithubToken: "GithubToken"
       #   WorkflowFileName: ${{ env.WORKFLOW_NAME }}
      env:
          PAT: ${{ secrets.PAT}}
          GithubToken: ${{ secrets.githubtoken}}
          
  buildcontainerSTAGING: 
      needs: build-and-Test
      runs-on: ubuntu-latest
      steps:
      - uses: actions/checkout@v2 
      - uses: azure/docker-login@v1
        with:
          login-server: openhackxwt4lo49acr.azurecr.io
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      - run: |
          docker build ./apis/${{ env.APP_NAME }}/web/ -t openhackxwt4lo49acr.azurecr.io/devopsoh/${{ env.API_NAME }}:${{github.run_number}}
          docker push openhackxwt4lo49acr.azurecr.io/devopsoh/${{ env.API_NAME }}:${{github.run_number}}

      - name: 'STAGING Deploy to Azure Web App for Container'
        uses: azure/webapps-deploy@v2
        with: 
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE_POI_STG}}
          app-name: ${{ env.AZURE_WEBAPP_NAME }} 
          images: openhackxwt4lo49acr.azurecr.io/devopsoh/${{ env.API_NAME }}:${{github.run_number}}
          slot-name: staging
          
  swaptoPROD:
    needs: buildcontainerSTAGING
    
    runs-on: ubuntu-latest

    
    steps:     
      - uses: actions/checkout@v1
      - name: Test Stagging
        run:  |
         ./polling.ps1 -Uri https://openhackxwt4lo49poi-staging.azurewebsites.net/api/healthcheck/poi
        shell: pwsh
        
    
           
